--- a/src/libmpg123/id3.c
+++ b/src/libmpg123/id3.c
@@ -250,6 +250,7 @@
 */
 static void store_id3_text(mpg123_string *sb, unsigned char *source, size_t source_size, const int noquiet, const int notranslate)
 {
+	unsigned char encoding;
 	if(!source_size)
 	{
 		debug("Empty id3 data!");
@@ -271,7 +272,16 @@
 		return;
 	}
 
-	id3_to_utf8(sb, source[0], source+1, source_size-1, noquiet);
+	encoding = source[0];
+	if(encoding > mpg123_id3_enc_max)
+	{
+		if(noquiet)
+			error1("Unknown text encoding %u, I take no chances, sorry!", encoding);
+
+		mpg123_free_string(sb);
+		return;
+	}
+	id3_to_utf8(sb, encoding, source+1, source_size-1, noquiet);
 
 	if(sb->fill) debug1("UTF-8 string (the first one): %s", sb->p);
 	else if(noquiet) error("unable to convert string to UTF-8 (out of memory, junk input?)!");
@@ -379,6 +389,12 @@
 		debug("Empty id3 data!");
 		return;
 	}
+	if(encoding > mpg123_id3_enc_max)
+	{
+		if(NOQUIET)
+			error1("Unknown text encoding %u, I take no chances, sorry!", encoding);
+		return;
+	}
 	if(VERBOSE4) fprintf(stderr, "Note: Storing picture from APIC frame.\n");
 	/* decompose realdata accordingly */
 	i = add_picture(fr);
@@ -447,6 +463,12 @@
 		if(NOQUIET) error1("Invalid frame size of %"SIZE_P" (too small for anything).", (size_p)realsize);
 		return;
 	}
+	if(encoding > mpg123_id3_enc_max)
+	{
+		if(NOQUIET)
+			error1("Unknown text encoding %u, I take no chances, sorry!", encoding);
+		return;
+	}
 	xcom = (tt == uslt ? add_text(fr) : add_comment(fr));
 	if(VERBOSE4) fprintf(stderr, "Note: Storing comment from %s encoding\n", enc_name(realdata[0]));
 	if(xcom == NULL)
@@ -529,6 +551,12 @@
 		if(NOQUIET) error1("Invalid frame size of %lu (too small for anything).", (unsigned long)realsize);
 		return;
 	}
+	if(encoding > mpg123_id3_enc_max)
+	{
+		if(NOQUIET)
+			error1("Unknown text encoding %u, I take no chances, sorry!", encoding);
+		return;
+	}
 	text = next_text(descr, encoding, realsize-(descr-realdata));
 	if(VERBOSE4) fprintf(stderr, "Note: Storing extra from %s encoding\n", enc_name(realdata[0]));
 	if(text == NULL)
@@ -873,7 +901,9 @@
 									debug2("ID3v2: de-unsync made %lu out of %lu bytes", realsize, framesize);
 								}
 								pos = 0; /* now at the beginning again... */
-								switch(tt)
+								/* Avoid reading over boundary, even if there is a */
+								/* zero byte of padding for safety. */
+								if(realsize) switch(tt)
 								{
 									case comment:
 									case uslt:
