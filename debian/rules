#!/usr/bin/make -f

PACKAGE:=mpg123

ARCH:=$(shell dpkg-architecture -qDEB_HOST_GNU_CPU)

ARCH_i486:=
ARCH_alpha:=-alpha
ARCH_powerpc:=-ppc
ARCH_m68k:=-m68k
ARCH_arm:=-arm
ARCH_sparc:=-sparc
ARCH_hppa:=-hppa

TARGETS_i486:=mpg123-oss mpg123-esd mpg123-nas \
	mpg123-oss-i486 mpg123-oss-3dnow mpg123-alsa
TARGETS_alpha:=mpg123-oss mpg123-esd
TARGETS_powerpc:=mpg123-oss mpg123-esd
TARGETS_m68k:=mpg123-oss
TARGETS_arm:=mpg123-oss
TARGETS_sparc:=mpg123-oss
TARGETS_hppa:=mpg123-oss

CACHE_FILE:="$(CURDIR)/config.cache"

CONF_COMMON:=--prefix=/usr --cache-file="$(CACHE_FILE)"

CONF_i486:=--with-cpu=i586
CONF_alpha:=
CONF_powerpc:=
CONF_m68k:=
CONF_arm:=--with-cpu=generic_nofpu
CONF_sparc:=
CONF_hppa:=

CONF_oss:=--with-audio=oss
CONF_oss-i486:=--with-audio=oss --with-cpu=i486
CONF_oss-3dnow:=--with-audio=oss --with-cpu=3dnow
CONF_esd:=--with-audio=esd
CONF_alsa:=--with-audio=alsa
CONF_nas:=--with-audio=nas

PKGNAME_mpg123-oss:=mpg123
PKGNAME_mpg123-oss-i486:=mpg123-oss-i486
PKGNAME_mpg123-oss-3dnow:=mpg123-oss-3dnow
PKGNAME_mpg123-esd:=mpg123-esd
PKGNAME_mpg123-alsa:=mpg123-alsa
PKGNAME_mpg123-nas:=mpg123-nas

# We assume if the user installs esd/nas, he wants
# esd/nas, and if he installs alsa, he wants
# alsa. For both alsa and esd/nas installed, assume
# he has an esd-alsa installed and wants to use it.
# i486 or 3dnow is used by default only if it's the only provider.
ALTPRIO_mpg123-oss:=30
ALTPRIO_mpg123-oss-i486:=60
ALTPRIO_mpg123-oss-3dnow:=60
ALTPRIO_mpg123-alsa:=40
ALTPRIO_mpg123-esd:=50
ALTPRIO_mpg123-nas:=50

#export DH_VERBOSE=1

mpg123-%:
	dh_testdir

	test -d "$(CURDIR)/obj" || mkdir "$(CURDIR)/obj"
	-rm -rf "$(CURDIR)/obj/$@"
	mkdir "$(CURDIR)/obj/$@"
	cd "$(CURDIR)/obj/$@" && \
		../../configure $(CONF_COMMON) $(CONF_$(ARCH)) $(CONF_$*) && \
		$(MAKE) && \
		mv src/mpg123 "$@" && \
		cp ../../mpg123.1 "$@".1
	touch "$@"

build: build-stamp
build-stamp: configure $(TARGETS_$(ARCH))
	touch build-stamp

configure:
	dh_testdir

	if test -f "$(CURDIR)/build/config.sub"; then \
		mv "$(CURDIR)/build/config.sub" "$(CURDIR)/debian/"; \
	fi
	if test -f "$(CURDIR)/build/config.guess"; then \
		mv "$(CURDIR)/build/config.guess" "$(CURDIR)/debian/"; \
	fi

	ln -sf /usr/share/misc/config.sub "$(CURDIR)/build/"
	ln -sf /usr/share/misc/config.guess "$(CURDIR)/build/"

clean:
	dh_testdir
	dh_testroot

	-rm -f build-stamp
	-rm -f "$(TARGETS_$(ARCH))"
	-rm -rf "$(CURDIR)/obj"
	-rm -f "$(CACHE_FILE)"

	-rm -f "$(CURDIR)/debian/*.install"
	-rm -f "$(CURDIR)/debian/*.manpages"
	-rm -f "$(CURDIR)/debian/*.mime"
	-rm -f "$(CURDIR)/debian/*.postinst"
	-rm -f "$(CURDIR)/debian/*.prerm"
	-rm -f "$(CURDIR)/debian/*.postrm"

	if test -L "$(CURDIR)/build/config.sub"; then \
		rm -f "$(CURDIR)/build/config.sub"; \
		if test -e "$(CURDIR)/debian/config.sub"; then \
			mv "$(CURDIR)/debian/config.sub" "$(CURDIR)/build/"; \
		fi; \
	fi
	if test -L "$(CURDIR)/build/config.guess"; then \
		rm -f "$(CURDIR)/build/config.guess"; \
		if test -e "$(CURDIR)/debian/config.guess"; then \
			mv "$(CURDIR)/debian/config.guess" "$(CURDIR)/build/"; \
		fi; \
	fi

	dh_clean

	# There's no guarrantee we patch configure.ac before configure.
	touch "$(CURDIR)/aclocal.m4" && \
		touch "$(CURDIR)/src/config.h.in" && \
		touch "$(CURDIR)/Makefile.in" && \
		touch "$(CURDIR)/src/Makefile.in" && \
		touch "$(CURDIR)/configure"

binary-indep: build

binary-pkg-%: build
	dh_testdir
	dh_testroot

	echo "obj/$*/$* /usr/bin/" > "$(CURDIR)/debian/$(PKGNAME_$*).install"
	echo "obj/$*/$*.1" > "$(CURDIR)/debian/$(PKGNAME_$*).manpages"
	echo "$(CURDIR)/debian/mime" > "$(CURDIR)/debian/$(PKGNAME_$*).mime"

	sed \
		-e 's/@PACKAGE@/$(PKGNAME_$*)/g' \
		-e 's/@FILENAME@/$*/g' \
		-e 's/@PRIORITY@/$(ALTPRIO_$*)/g' \
		< "$(CURDIR)/debian/postinst.in" \
		> "$(CURDIR)/debian/$(PKGNAME_$*).postinst"
	sed \
		-e 's/@PACKAGE@/$(PKGNAME_$*)/g' \
		-e 's/@FILENAME@/$*/g' \
		< "$(CURDIR)/debian/prerm.in" \
		> "$(CURDIR)/debian/$(PKGNAME_$*).prerm"

install: build
	dh_testdir
	dh_testroot
	dh_install -A
	dh_installdocs -A README AUTHORS doc/BENCHMARKING doc/CONTACT \
	                  doc/README.gain doc/README.remote doc/THANKS 
	dh_installman -A
	dh_installchangelogs -A NEWS
	dh_installmime -A
	dh_strip -A
	dh_compress -A
	dh_fixperms -A
	dh_installdeb -A
	dh_shlibdeps -A
	dh_gencontrol -A
	dh_md5sums -A
	dh_builddeb -A

binary-arch: build $(TARGETS_$(ARCH):%=binary-pkg-%) install

binary: binary-indep binary-arch

.PHONY: build clean configure install binary binary-arch binary-indep
