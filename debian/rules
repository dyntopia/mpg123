#!/usr/bin/make -f

PACKAGE:=mpg123

ARCH:=$(shell dpkg-architecture -qDEB_HOST_GNU_CPU)
OS:=$(shell dpkg-architecture -qDEB_HOST_ARCH_OS)

TARGETS:=mpg123-oss mpg123-esd mpg123-nas

ifeq ($(ARCH),i486)
TARGETS += mpg123-oss-i486
endif

ifeq ($(OS),linux)
TARGETS += mpg123-alsa
endif

CACHE_FILE:="$(CURDIR)/config.cache"

CONF_COMMON:=--prefix=/usr --cache-file="$(CACHE_FILE)"

# 3dnow includes the previous default i586 as fallback at runtime.
CONF_i486:=--with-cpu=3dnow
CONF_arm:=--with-cpu=generic_nofpu

CONF_oss:=--with-audio=oss
CONF_oss-i486:=--with-audio=oss --with-cpu=i486
CONF_esd:=--with-audio=esd
CONF_alsa:=--with-audio=alsa
CONF_nas:=--with-audio=nas

PKGNAME_mpg123-oss:=mpg123
PKGNAME_mpg123-oss-i486:=mpg123-oss-i486
PKGNAME_mpg123-esd:=mpg123-esd
PKGNAME_mpg123-alsa:=mpg123-alsa
PKGNAME_mpg123-nas:=mpg123-nas

ARCH_PKGSTR=$(foreach pkg,$(TARGETS),-p$(PKGNAME_$(pkg)))
ifeq ($(ARCH),i486)
ifeq ($(OS),linux)
ARCH_PKGSTR += -pmpg123-oss-3dnow
endif
endif

# We assume if the user installs esd/nas, he wants
# esd/nas, and if he installs alsa, he wants
# alsa. For both alsa and esd/nas installed, assume
# he has an esd-alsa installed and wants to use it.
# i486 is used by default only if it's the only provider.
ALTPRIO_mpg123-oss:=30
ALTPRIO_mpg123-oss-i486:=60
ALTPRIO_mpg123-alsa:=40
ALTPRIO_mpg123-esd:=50
ALTPRIO_mpg123-nas:=50

#export DH_VERBOSE=1

mpg123-%:
	dh_testdir

	test -d "$(CURDIR)/obj" || mkdir "$(CURDIR)/obj"
	-rm -rf "$(CURDIR)/obj/$@"
	mkdir "$(CURDIR)/obj/$@"
	cd "$(CURDIR)/obj/$@" && \
		../../configure $(CONF_COMMON) $(CONF_$(ARCH)) $(CONF_$*) && \
		$(MAKE) && \
		mv src/mpg123 "$@" && \
		cp ../../mpg123.1 "$@".1
	touch "$@"

build: build-stamp
build-stamp: configure $(TARGETS)
	touch build-stamp

configure:
	dh_testdir

	if test -f "$(CURDIR)/build/config.sub"; then \
		mv "$(CURDIR)/build/config.sub" "$(CURDIR)/debian/"; \
	fi
	if test -f "$(CURDIR)/build/config.guess"; then \
		mv "$(CURDIR)/build/config.guess" "$(CURDIR)/debian/"; \
	fi

	ln -sf /usr/share/misc/config.sub "$(CURDIR)/build/"
	ln -sf /usr/share/misc/config.guess "$(CURDIR)/build/"

clean:
	dh_testdir
	dh_testroot

	-rm -f build-stamp
	-rm -f "$(TARGETS)"
	-rm -rf "$(CURDIR)/obj"
	-rm -f "$(CACHE_FILE)"

	-rm -f "$(CURDIR)/debian/*.install"
	-rm -f "$(CURDIR)/debian/*.manpages"
	-rm -f "$(CURDIR)/debian/*.mime"
	-rm -f "$(CURDIR)/debian/*.postinst"
	-rm -f "$(CURDIR)/debian/*.prerm"
	-rm -f "$(CURDIR)/debian/*.postrm"

	if test -L "$(CURDIR)/build/config.sub"; then \
		rm -f "$(CURDIR)/build/config.sub"; \
		if test -e "$(CURDIR)/debian/config.sub"; then \
			mv "$(CURDIR)/debian/config.sub" "$(CURDIR)/build/"; \
		fi; \
	fi
	if test -L "$(CURDIR)/build/config.guess"; then \
		rm -f "$(CURDIR)/build/config.guess"; \
		if test -e "$(CURDIR)/debian/config.guess"; then \
			mv "$(CURDIR)/debian/config.guess" "$(CURDIR)/build/"; \
		fi; \
	fi

	dh_clean

	# There's no guarrantee we patch configure.ac before configure.
	touch "$(CURDIR)/aclocal.m4" && \
		touch "$(CURDIR)/src/config.h.in" && \
		touch "$(CURDIR)/Makefile.in" && \
		touch "$(CURDIR)/src/Makefile.in" && \
		touch "$(CURDIR)/configure"

binary-indep: build

binary-pkg-%: build
	dh_testdir
	dh_testroot

	echo "obj/$*/$* /usr/bin/" > "$(CURDIR)/debian/$(PKGNAME_$*).install"
	echo "obj/$*/$*.1" > "$(CURDIR)/debian/$(PKGNAME_$*).manpages"
	cat "$(CURDIR)/debian/mime" > "$(CURDIR)/debian/$(PKGNAME_$*).mime"

	sed \
		-e 's/@PACKAGE@/$(PKGNAME_$*)/g' \
		-e 's/@FILENAME@/$*/g' \
		-e 's/@PRIORITY@/$(ALTPRIO_$*)/g' \
		< "$(CURDIR)/debian/postinst.in" \
		> "$(CURDIR)/debian/$(PKGNAME_$*).postinst"
	sed \
		-e 's/@PACKAGE@/$(PKGNAME_$*)/g' \
		-e 's/@FILENAME@/$*/g' \
		< "$(CURDIR)/debian/prerm.in" \
		> "$(CURDIR)/debian/$(PKGNAME_$*).prerm"

install: build
	dh_testdir
	dh_testroot
	dh_install $(ARCH_PKGSTR)
	dh_installdocs $(ARCH_PKGSTR) -A \
	               README AUTHORS doc/BENCHMARKING doc/CONTACT \
	               doc/README.gain doc/README.remote doc/THANKS 
	dh_installman $(ARCH_PKGSTR)
	dh_installchangelogs $(ARCH_PKGSTR) NEWS
	dh_installmime $(ARCH_PKGSTR)
	dh_strip $(ARCH_PKGSTR)
	dh_compress $(ARCH_PKGSTR)
	dh_fixperms $(ARCH_PKGSTR)
	dh_installdeb $(ARCH_PKGSTR)
	dh_shlibdeps $(ARCH_PKGSTR)
	dh_gencontrol $(ARCH_PKGSTR)
	dh_md5sums $(ARCH_PKGSTR)
	dh_builddeb $(ARCH_PKGSTR)

binary-arch: build $(TARGETS:%=binary-pkg-%) install

binary: binary-indep binary-arch

.PHONY: build clean configure install binary binary-arch binary-indep
